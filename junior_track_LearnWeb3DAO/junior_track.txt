Junior Track LearnWeb3DAO
https://www.learnweb3.io/tracks/junior/layer-2s

Layer 1
A Layer-1 blockchain (also known as the parent chain or root chain) is typically a name used to describe a main blockchain network protocol such as Ethereum or Bitcoin. Layer-1 blockchains are simply the main network that a Layer-2 scaling solution attaches to in order to improve the scalability and transaction throughput of the main chain, or Layer 1. T

Layer 2
Layer 2 refers to a secondary framework or protocol that is built on top of an existing blockchain system. Major cryptocurrency networks such as Ethereum face transaction speed and scaling difficulties. Bitcoin and Ethereum are still not able to process thousands of transactions per second. Additionally, these layer 2 solutions usually offer much better transaction fees.

Therefore, a major consideration for a layer 2 solution is how transactions are validated and confirmed before being moved to the main chain.

Layer 2 Scaling Solutions

There are two main dimensions where Layer 2 scaling solutions differ from each other. The first is transaction execution and the second is data availability.

Transaction execution strategies deal with how transactions are run, where they are run, what the trust environments are, what the security and decentralization environments are, etc.
Data availability strategies deal with whether or not the Layer 2 solution makes their transaction data available on the main Layer 1 chain or not.

We will look at the following categories:
1. State Channels
2. Side Chains
3. Rollups
    * Optimistic Rollups (ORs)
    * Zero-Knowledge Rollups (ZKRs)
    * ZKR vs OR
4. Plasma
5. Validiums
6. Volitions

State Channels

State channels were the first widespread scaling approach for blockchains. State channels are used when two or more users want to do a bunch of transactions in a trusted setting without paying gas every single time.

Ex: Tic tac toe games, Artist receive royalties on Spotify each month…

Side Chains
A side chain is an independent EVM-compatible blockchain which runs in parallel to a main blockchain, and has a channel to Layer 1. A side chain has its own validators and consensus method of adding blocks. Side chains accumulate transactions quickly and cheaply and summarize them to the main chain via a bridge or channel.

The drawbacks of side chains are that they can be more centralized.

Important to note that, unlike other solutions below, side chains are technically not layer 2 because they do not use the security of the main chain, but are often referred to as such.

Rollups
Rollups are solutions that perform transaction execution on Layer 2 but post transaction data onto Layer 1, in a bundled or summarized form. Think of rollups as a "squash and merge" operation.
Rollups work by deploying a set of smart contracts on Layer 1 that are responsible for deposits, withdraws, and verifying proofs. Proofs are the main distinction between different types of rollups. In general, there are two kinds of rollups: Optimistic Rollups and Zero-Knowledge Rollups.

Optimistic Rollups
In optimistic rollups, batches of transaction data are posted to the main chain and presumed to be valid by default (hence the name optimistic) but can be challenged by other users.

we introduce 3 players in this space:
1. asserter - the proposer attempting to post a proof of transactions on the main chain, thereby asserting their validity
2. challenger - the user trying to prove that the proof posted by the asserter is fraudulent
3. verifier - a smart contract on the main chain that verifies the proof and checks it's validity

ZK Rollups
ZK stands for "Zero Knowledge" and it's a method by which one party (the prover) can prove to another party (the verifier) that a given statement is true while the prover avoids conveying any additional information apart from the fact that the statement is indeed true. More on Zero Knowledge Proofs.

In particular, the proposer constructs a certain kind of zero knowledge proof, called a zk-SNARK, which is a non-interactive zero knowledge proof, meaning that this proof requires no interaction between the prover and the verifier.

ZK vs Optimistic
At first glance, ZK rollups seem better in every way than optimistic rollups. After all, transactions can be verified automatically, without the need for challengers, and the asserters prove their own transactions before submitting them.

So, why have optimistic rollups at all?

The problem with ZK rollups is that it is difficult to construct these proofs, mathematically speaking. Every use case requires research time to find a matching cryptographic proof, which can take a long time to find.
Furthermore, ZK proofs are often complex and therefore expensive to verify. The more operations the smart contract contains, the more expensive it is to run.