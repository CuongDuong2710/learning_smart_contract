digraph G {
  graph [ ratio = "auto", page = "100", compound =true, bgcolor = "#2e3e56" ];
  node [ style = "filled", fillcolor = "#edad56", color = "#edad56", penwidth =3 ];
  edge [ color = "#fcfcfc", penwidth =2, fontname = "helvetica Neue Ultra Light" ];
subgraph "clusterMarketplace" {
  graph [ label = "Marketplace", color = "#445773", fontcolor = "#f0f0f0", style = "rounded", bgcolor = "#445773" ];
  "Marketplace.<Constructor>" [ label = "<Constructor>", color = "#FF9797", fillcolor = "#FF9797" ];
  "Marketplace._updateFeeRecipient" [ label = "_updateFeeRecipient" ];
  "Marketplace.updateFeeRecipient" [ label = "updateFeeRecipient", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "Marketplace._updateFeeRate" [ label = "_updateFeeRate" ];
  "Marketplace.updateFeeRate" [ label = "updateFeeRate", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "Marketplace._calculateFee" [ label = "_calculateFee" ];
  "Marketplace.isSeller" [ label = "isSeller" ];
  "Marketplace.addPaymentToken" [ label = "addPaymentToken", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "Marketplace.isPaymentTokenSupported" [ label = "isPaymentTokenSupported", color = "#FF9797", fillcolor = "#FF9797" ];
  "Marketplace.onlySupportedPaymentToken" [ label = "onlySupportedPaymentToken", color = "#1bc6a6", shape =doubleoctagon ];
  "Marketplace.addOrder" [ label = "addOrder", color = "#FF9797", fillcolor = "#FF9797" ];
  "Marketplace.cancelOrder" [ label = "cancelOrder", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "Marketplace.executeOrder" [ label = "executeOrder", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "Marketplace._msgSender" [ label = "_msgSender" ];
}

subgraph "clusterERC721" {
  graph [ label = "ERC721", color = "#445773", fontcolor = "#f0f0f0", style = "rounded", bgcolor = "#445773" ];
  "ERC721.<Constructor>" [ label = "<Constructor>", color = "#FF9797", fillcolor = "#FF9797" ];
  "ERC721.supportsInterface" [ label = "supportsInterface", color = "#FF9797", fillcolor = "#FF9797" ];
  "ERC721.balanceOf" [ label = "balanceOf", color = "#FF9797", fillcolor = "#FF9797" ];
  "IERC721.ownerOf" [ label = "ownerOf", color = "#FF9797", fillcolor = "#FF9797" ];
  "ERC721.name" [ label = "name", color = "#FF9797", fillcolor = "#FF9797" ];
  "ERC721.symbol" [ label = "symbol", color = "#FF9797", fillcolor = "#FF9797" ];
  "ERC721.tokenURI" [ label = "tokenURI", color = "#FF9797", fillcolor = "#FF9797" ];
  "ERC721._baseURI" [ label = "_baseURI" ];
  "ERC721.approve" [ label = "approve", color = "#FF9797", fillcolor = "#FF9797" ];
  "IERC721.getApproved" [ label = "getApproved", color = "#FF9797", fillcolor = "#FF9797" ];
  "ERC721.setApprovalForAll" [ label = "setApprovalForAll", color = "#FF9797", fillcolor = "#FF9797" ];
  "IERC721.isApprovedForAll" [ label = "isApprovedForAll", color = "#FF9797", fillcolor = "#FF9797" ];
  "IERC721.transferFrom" [ label = "transferFrom", color = "#FF9797", fillcolor = "#FF9797" ];
  "ERC721.safeTransferFrom" [ label = "safeTransferFrom" ];
  "ERC721._safeTransfer" [ label = "_safeTransfer" ];
  "ERC721._exists" [ label = "_exists" ];
  "ERC721._isApprovedOrOwner" [ label = "_isApprovedOrOwner" ];
  "ERC721._safeMint" [ label = "_safeMint" ];
  "ERC721._mint" [ label = "_mint" ];
  "ERC721._burn" [ label = "_burn", color = "#f2c383", fillcolor = "#f2c383" ];
  "ERC721._transfer" [ label = "_transfer" ];
  "ERC721._approve" [ label = "_approve" ];
  "ERC721._setApprovalForAll" [ label = "_setApprovalForAll" ];
  "ERC721._checkOnERC721Received" [ label = "_checkOnERC721Received" ];
  "ERC721._beforeTokenTransfer" [ label = "_beforeTokenTransfer" ];
  "ERC721._afterTokenTransfer" [ label = "_afterTokenTransfer" ];
  "ERC721.type" [ label = "type" ];
  "ERC721._msgSender" [ label = "_msgSender" ];
}

subgraph "clusterIERC721" {
  graph [ label = "IERC721  (iface)", color = "#445773", fontcolor = "#f0f0f0", style = "rounded", bgcolor = "#445773" ];
  "IERC721.ownerOf" [ label = "ownerOf", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IERC721.getApproved" [ label = "getApproved", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IERC721.isApprovedForAll" [ label = "isApprovedForAll", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IERC721.transferFrom" [ label = "transferFrom", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IERC721.balanceOf" [ label = "balanceOf", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IERC721.safeTransferFrom" [ label = "safeTransferFrom", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IERC721.approve" [ label = "approve", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IERC721.setApprovalForAll" [ label = "setApprovalForAll", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
}

subgraph "clusterIERC165" {
  graph [ label = "IERC165  (iface)", color = "#445773", fontcolor = "#f0f0f0", style = "rounded", bgcolor = "#445773" ];
  "IERC165.supportsInterface" [ label = "supportsInterface", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
}

subgraph "clusterIERC721Receiver" {
  graph [ label = "IERC721Receiver  (iface)", color = "#445773", fontcolor = "#f0f0f0", style = "rounded", bgcolor = "#445773" ];
  "IERC721Receiver.onERC721Received" [ label = "onERC721Received", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
}

subgraph "clusterIERC721Metadata" {
  graph [ label = "IERC721Metadata  (iface)", color = "#445773", fontcolor = "#f0f0f0", style = "rounded", bgcolor = "#445773" ];
  "IERC721Metadata.supportsInterface" [ label = "supportsInterface" ];
  "IERC721Metadata.name" [ label = "name", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IERC721Metadata.symbol" [ label = "symbol", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IERC721Metadata.tokenURI" [ label = "tokenURI", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
}

subgraph "clusterAddress" {
  graph [ label = "Address  (lib)", color = "#445773", fontcolor = "#f0f0f0", style = "rounded", bgcolor = "#445773" ];
  "Address.isContract" [ label = "isContract" ];
  "Address.sendValue" [ label = "sendValue", color = "#f2c383", fillcolor = "#f2c383" ];
  "Address.functionCall" [ label = "functionCall" ];
  "Address.functionCallWithValue" [ label = "functionCallWithValue" ];
  "Address.functionStaticCall" [ label = "functionStaticCall" ];
  "Address.functionDelegateCall" [ label = "functionDelegateCall" ];
  "Address.verifyCallResult" [ label = "verifyCallResult" ];
}

subgraph "clusterContext" {
  graph [ label = "Context", color = "#445773", fontcolor = "#f0f0f0", style = "rounded", bgcolor = "#445773" ];
  "Context._msgSender" [ label = "_msgSender", color = "#f2c383", fillcolor = "#f2c383" ];
  "Context._msgData" [ label = "_msgData", color = "#f2c383", fillcolor = "#f2c383" ];
}

subgraph "clusterStrings" {
  graph [ label = "Strings  (lib)", color = "#445773", fontcolor = "#f0f0f0", style = "rounded", bgcolor = "#445773" ];
  "Strings.toString" [ label = "toString", color = "#f2c383", fillcolor = "#f2c383" ];
  "Strings.toHexString" [ label = "toHexString" ];
}

subgraph "clusterERC165" {
  graph [ label = "ERC165", color = "#445773", fontcolor = "#f0f0f0", style = "rounded", bgcolor = "#445773" ];
  "ERC165.supportsInterface" [ label = "supportsInterface", color = "#FF9797", fillcolor = "#FF9797" ];
  "ERC165.type" [ label = "type" ];
}

subgraph "clusterERC20" {
  graph [ label = "ERC20", color = "#445773", fontcolor = "#f0f0f0", style = "rounded", bgcolor = "#445773" ];
  "ERC20.<Constructor>" [ label = "<Constructor>", color = "#FF9797", fillcolor = "#FF9797" ];
  "ERC20.name" [ label = "name", color = "#FF9797", fillcolor = "#FF9797" ];
  "ERC20.symbol" [ label = "symbol", color = "#FF9797", fillcolor = "#FF9797" ];
  "ERC20.decimals" [ label = "decimals", color = "#FF9797", fillcolor = "#FF9797" ];
  "ERC20.totalSupply" [ label = "totalSupply", color = "#FF9797", fillcolor = "#FF9797" ];
  "ERC20.balanceOf" [ label = "balanceOf", color = "#FF9797", fillcolor = "#FF9797" ];
  "ERC20.transfer" [ label = "transfer", color = "#FF9797", fillcolor = "#FF9797" ];
  "ERC20.allowance" [ label = "allowance" ];
  "ERC20.approve" [ label = "approve", color = "#FF9797", fillcolor = "#FF9797" ];
  "ERC20.transferFrom" [ label = "transferFrom", color = "#FF9797", fillcolor = "#FF9797" ];
  "ERC20.increaseAllowance" [ label = "increaseAllowance", color = "#FF9797", fillcolor = "#FF9797" ];
  "ERC20.decreaseAllowance" [ label = "decreaseAllowance", color = "#FF9797", fillcolor = "#FF9797" ];
  "ERC20._transfer" [ label = "_transfer" ];
  "ERC20._mint" [ label = "_mint", color = "#f2c383", fillcolor = "#f2c383" ];
  "ERC20._burn" [ label = "_burn", color = "#f2c383", fillcolor = "#f2c383" ];
  "ERC20._approve" [ label = "_approve" ];
  "ERC20._spendAllowance" [ label = "_spendAllowance" ];
  "ERC20._beforeTokenTransfer" [ label = "_beforeTokenTransfer" ];
  "ERC20._afterTokenTransfer" [ label = "_afterTokenTransfer" ];
  "ERC20._msgSender" [ label = "_msgSender" ];
  "ERC20.type" [ label = "type" ];
}

subgraph "clusterIERC20" {
  graph [ label = "IERC20  (iface)", color = "#445773", fontcolor = "#f0f0f0", style = "rounded", bgcolor = "#445773" ];
  "IERC20.totalSupply" [ label = "totalSupply", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IERC20.balanceOf" [ label = "balanceOf", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IERC20.transfer" [ label = "transfer", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IERC20.allowance" [ label = "allowance", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IERC20.approve" [ label = "approve", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IERC20.transferFrom" [ label = "transferFrom", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
}

subgraph "clusterIERC20Metadata" {
  graph [ label = "IERC20Metadata  (iface)", color = "#445773", fontcolor = "#f0f0f0", style = "rounded", bgcolor = "#445773" ];
  "IERC20Metadata.name" [ label = "name", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IERC20Metadata.symbol" [ label = "symbol", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
  "IERC20Metadata.decimals" [ label = "decimals", color = "#ffbdb9", fillcolor = "#ffbdb9" ];
}

subgraph "clusterOwnable" {
  graph [ label = "Ownable", color = "#445773", fontcolor = "#f0f0f0", style = "rounded", bgcolor = "#445773" ];
  "Ownable.<Constructor>" [ label = "<Constructor>", color = "#FF9797", fillcolor = "#FF9797" ];
  "Ownable.owner" [ label = "owner" ];
  "Ownable.onlyOwner" [ label = "onlyOwner", color = "#1bc6a6", shape =doubleoctagon ];
  "Ownable.renounceOwnership" [ label = "renounceOwnership", color = "#FF9797", fillcolor = "#FF9797" ];
  "Ownable.transferOwnership" [ label = "transferOwnership", color = "#FF9797", fillcolor = "#FF9797" ];
  "Ownable._transferOwnership" [ label = "_transferOwnership" ];
  "Ownable._msgSender" [ label = "_msgSender" ];
}

subgraph "clusterCounters" {
  graph [ label = "Counters  (lib)", color = "#445773", fontcolor = "#f0f0f0", style = "rounded", bgcolor = "#445773" ];
  "Counters.current" [ label = "current", color = "#f2c383", fillcolor = "#f2c383" ];
  "Counters.increment" [ label = "increment", color = "#f2c383", fillcolor = "#f2c383" ];
  "Counters.decrement" [ label = "decrement", color = "#f2c383", fillcolor = "#f2c383" ];
  "Counters.reset" [ label = "reset", color = "#f2c383", fillcolor = "#f2c383" ];
}

subgraph "clusterEnumerableSet" {
  graph [ label = "EnumerableSet  (lib)", color = "#445773", fontcolor = "#f0f0f0", style = "rounded", bgcolor = "#445773" ];
  "EnumerableSet._add" [ label = "_add", color = "#edad56", fillcolor = "#edad56" ];
  "EnumerableSet._remove" [ label = "_remove" ];
  "EnumerableSet._contains" [ label = "_contains" ];
  "EnumerableSet._length" [ label = "_length" ];
  "EnumerableSet._at" [ label = "_at" ];
  "EnumerableSet._values" [ label = "_values" ];
  "EnumerableSet.add" [ label = "add", color = "#f2c383", fillcolor = "#f2c383" ];
  "EnumerableSet.remove" [ label = "remove", color = "#f2c383", fillcolor = "#f2c383" ];
  "EnumerableSet.contains" [ label = "contains", color = "#f2c383", fillcolor = "#f2c383" ];
  "EnumerableSet.length" [ label = "length", color = "#f2c383", fillcolor = "#f2c383" ];
  "EnumerableSet.at" [ label = "at", color = "#f2c383", fillcolor = "#f2c383" ];
  "EnumerableSet.values" [ label = "values", color = "#f2c383", fillcolor = "#f2c383" ];
}

subgraph "clusterCounters.Counter" {
  graph [ label = "Counters.Counter", color = "#e8726d", fontcolor = "#f0f0f0", style = "rounded,dashed", bgcolor = "#3b4b63" ];
  "Counters.Counter.increment" [ label = "increment" ];
  "Counters.Counter.current" [ label = "current" ];
}

subgraph "clusterEnumerableSet.AddressSet" {
  graph [ label = "EnumerableSet.AddressSet", color = "#e8726d", fontcolor = "#f0f0f0", style = "rounded,dashed", bgcolor = "#3b4b63" ];
  "EnumerableSet.AddressSet.add" [ label = "add" ];
  "EnumerableSet.AddressSet.contains" [ label = "contains" ];
}

subgraph "clustertokenId" {
  graph [ label = "tokenId", color = "#e8726d", fontcolor = "#f0f0f0", style = "rounded,dashed", bgcolor = "#3b4b63" ];
  "tokenId.toString" [ label = "toString" ];
}

subgraph "clusterto" {
  graph [ label = "to", color = "#e8726d", fontcolor = "#f0f0f0", style = "rounded,dashed", bgcolor = "#3b4b63" ];
  "to.isContract" [ label = "isContract" ];
}

subgraph "clustertarget" {
  graph [ label = "target", color = "#e8726d", fontcolor = "#f0f0f0", style = "rounded,dashed", bgcolor = "#3b4b63" ];
  "target.staticcall" [ label = "staticcall" ];
  "target.delegatecall" [ label = "delegatecall" ];
}

  "Marketplace.<Constructor>";
  "Marketplace._updateFeeRecipient";
  "Marketplace._updateFeeRate";
  "Counters.Counter.increment";
  "Marketplace.updateFeeRecipient";
  "Marketplace.updateFeeRate";
  "Marketplace.addPaymentToken";
  "EnumerableSet.AddressSet.add";
  "Marketplace.isPaymentTokenSupported";
  "EnumerableSet.AddressSet.contains";
  "Marketplace.onlySupportedPaymentToken";
  "Marketplace.addOrder";
  "IERC721.ownerOf";
  "Marketplace._msgSender";
  "IERC721.getApproved";
  "IERC721.isApprovedForAll";
  "Counters.Counter.current";
  "IERC721.transferFrom";
  "Marketplace.cancelOrder";
  "Marketplace.executeOrder";
  "Marketplace.isSeller";
  "Marketplace._calculateFee";
  "ERC721.supportsInterface";
  "ERC721.type";
  "IERC721Metadata.supportsInterface";
  "ERC721.tokenURI";
  "ERC721._exists";
  "ERC721._baseURI";
  "tokenId.toString";
  "ERC721.approve";
  "ERC721._msgSender";
  "ERC721._approve";
  "ERC721.setApprovalForAll";
  "ERC721._setApprovalForAll";
  "ERC721._isApprovedOrOwner";
  "ERC721._transfer";
  "ERC721.safeTransferFrom";
  "ERC721._safeTransfer";
  "ERC721._checkOnERC721Received";
  "ERC721._safeMint";
  "ERC721._mint";
  "ERC721._beforeTokenTransfer";
  "ERC721._afterTokenTransfer";
  "ERC721._burn";
  "to.isContract";
  "Address.functionCall";
  "Address.functionCallWithValue";
  "Address.isContract";
  "Address.verifyCallResult";
  "Address.functionStaticCall";
  "target.staticcall";
  "Address.functionDelegateCall";
  "target.delegatecall";
  "Strings.toHexString";
  "ERC165.supportsInterface";
  "ERC165.type";
  "ERC20.transfer";
  "ERC20._msgSender";
  "ERC20._transfer";
  "ERC20.approve";
  "ERC20._approve";
  "ERC20.transferFrom";
  "ERC20._spendAllowance";
  "ERC20.increaseAllowance";
  "ERC20.decreaseAllowance";
  "ERC20._beforeTokenTransfer";
  "ERC20._afterTokenTransfer";
  "ERC20._mint";
  "ERC20._burn";
  "ERC20.allowance";
  "ERC20.type";
  "Ownable.<Constructor>";
  "Ownable._transferOwnership";
  "Ownable._msgSender";
  "Ownable.onlyOwner";
  "Ownable.owner";
  "Ownable.renounceOwnership";
  "Ownable.transferOwnership";
  "EnumerableSet._add";
  "EnumerableSet._contains";
  "EnumerableSet.add";
  "EnumerableSet.remove";
  "EnumerableSet._remove";
  "EnumerableSet.contains";
  "EnumerableSet.length";
  "EnumerableSet._length";
  "EnumerableSet.at";
  "EnumerableSet._at";
  "EnumerableSet.values";
  "EnumerableSet._values";
  "Marketplace.<Constructor>" -> "Marketplace._updateFeeRecipient" [ color = "#1bc6a6" ];
  "Marketplace.<Constructor>" -> "Marketplace._updateFeeRate" [ color = "#1bc6a6" ];
  "Marketplace.<Constructor>" -> "Counters.Counter.increment" [ color = "white" ];
  "Marketplace.updateFeeRecipient" -> "Marketplace._updateFeeRecipient" [ color = "#1bc6a6" ];
  "Marketplace.updateFeeRate" -> "Marketplace._updateFeeRate" [ color = "#1bc6a6" ];
  "Marketplace.addPaymentToken" -> "EnumerableSet.AddressSet.add" [ color = "white" ];
  "Marketplace.isPaymentTokenSupported" -> "EnumerableSet.AddressSet.contains" [ color = "white" ];
  "Marketplace.onlySupportedPaymentToken" -> "Marketplace.isPaymentTokenSupported" [ color = "#1bc6a6" ];
  "Marketplace.addOrder" -> "IERC721.ownerOf" [ color = "white" ];
  "Marketplace.addOrder" -> "Marketplace._msgSender" [ color = "#1bc6a6" ];
  "Marketplace.addOrder" -> "IERC721.getApproved" [ color = "white" ];
  "Marketplace.addOrder" -> "IERC721.isApprovedForAll" [ color = "white" ];
  "Marketplace.addOrder" -> "Marketplace._msgSender" [ color = "#1bc6a6" ];
  "Marketplace.addOrder" -> "Counters.Counter.current" [ color = "white" ];
  "Marketplace.addOrder" -> "Marketplace._msgSender" [ color = "#1bc6a6" ];
  "Marketplace.addOrder" -> "Counters.Counter.increment" [ color = "white" ];
  "Marketplace.addOrder" -> "IERC721.transferFrom" [ color = "white" ];
  "Marketplace.addOrder" -> "Marketplace._msgSender" [ color = "#1bc6a6" ];
  "Marketplace.addOrder" -> "Marketplace._msgSender" [ color = "#1bc6a6" ];
  "Marketplace.cancelOrder" -> "Marketplace._msgSender" [ color = "#1bc6a6" ];
  "Marketplace.cancelOrder" -> "IERC721.transferFrom" [ color = "white" ];
  "Marketplace.cancelOrder" -> "Marketplace._msgSender" [ color = "#1bc6a6" ];
  "Marketplace.executeOrder" -> "Marketplace.isSeller" [ color = "#1bc6a6" ];
  "Marketplace.executeOrder" -> "Marketplace._msgSender" [ color = "#1bc6a6" ];
  "Marketplace.executeOrder" -> "Marketplace._msgSender" [ color = "#1bc6a6" ];
  "Marketplace.executeOrder" -> "Marketplace._calculateFee" [ color = "#1bc6a6" ];
  "Marketplace.executeOrder" -> "Marketplace._msgSender" [ color = "#1bc6a6" ];
  "Marketplace.executeOrder" -> "Marketplace._msgSender" [ color = "#1bc6a6" ];
  "Marketplace.executeOrder" -> "IERC721.transferFrom" [ color = "white" ];
  "Marketplace.executeOrder" -> "Marketplace._msgSender" [ color = "#1bc6a6" ];
  "ERC721.supportsInterface" -> "ERC721.type" [ color = "#1bc6a6" ];
  "ERC721.supportsInterface" -> "ERC721.type" [ color = "#1bc6a6" ];
  "ERC721.supportsInterface" -> "IERC721Metadata.supportsInterface" [ color = "white" ];
  "ERC721.tokenURI" -> "ERC721._exists" [ color = "#1bc6a6" ];
  "ERC721.tokenURI" -> "ERC721._baseURI" [ color = "#1bc6a6" ];
  "ERC721.tokenURI" -> "tokenId.toString" [ color = "white" ];
  "ERC721.approve" -> "IERC721.ownerOf" [ color = "white" ];
  "ERC721.approve" -> "ERC721._msgSender" [ color = "#1bc6a6" ];
  "ERC721.approve" -> "IERC721.isApprovedForAll" [ color = "#1bc6a6" ];
  "ERC721.approve" -> "ERC721._msgSender" [ color = "#1bc6a6" ];
  "ERC721.approve" -> "ERC721._approve" [ color = "#1bc6a6" ];
  "IERC721.getApproved" -> "ERC721._exists" [ color = "#1bc6a6" ];
  "ERC721.setApprovalForAll" -> "ERC721._setApprovalForAll" [ color = "#1bc6a6" ];
  "ERC721.setApprovalForAll" -> "ERC721._msgSender" [ color = "#1bc6a6" ];
  "IERC721.transferFrom" -> "ERC721._isApprovedOrOwner" [ color = "#1bc6a6" ];
  "IERC721.transferFrom" -> "ERC721._msgSender" [ color = "#1bc6a6" ];
  "IERC721.transferFrom" -> "ERC721._transfer" [ color = "#1bc6a6" ];
  "ERC721.safeTransferFrom" -> "ERC721.safeTransferFrom" [ color = "#1bc6a6" ];
  "ERC721.safeTransferFrom" -> "ERC721._isApprovedOrOwner" [ color = "#1bc6a6" ];
  "ERC721.safeTransferFrom" -> "ERC721._msgSender" [ color = "#1bc6a6" ];
  "ERC721.safeTransferFrom" -> "ERC721._safeTransfer" [ color = "#1bc6a6" ];
  "ERC721._safeTransfer" -> "ERC721._transfer" [ color = "#1bc6a6" ];
  "ERC721._safeTransfer" -> "ERC721._checkOnERC721Received" [ color = "#1bc6a6" ];
  "ERC721._isApprovedOrOwner" -> "ERC721._exists" [ color = "#1bc6a6" ];
  "ERC721._isApprovedOrOwner" -> "IERC721.ownerOf" [ color = "white" ];
  "ERC721._isApprovedOrOwner" -> "IERC721.getApproved" [ color = "#1bc6a6" ];
  "ERC721._isApprovedOrOwner" -> "IERC721.isApprovedForAll" [ color = "#1bc6a6" ];
  "ERC721._safeMint" -> "ERC721._safeMint" [ color = "#1bc6a6" ];
  "ERC721._safeMint" -> "ERC721._mint" [ color = "#1bc6a6" ];
  "ERC721._safeMint" -> "ERC721._checkOnERC721Received" [ color = "#1bc6a6" ];
  "ERC721._mint" -> "ERC721._exists" [ color = "#1bc6a6" ];
  "ERC721._mint" -> "ERC721._beforeTokenTransfer" [ color = "#1bc6a6" ];
  "ERC721._mint" -> "ERC721._afterTokenTransfer" [ color = "#1bc6a6" ];
  "ERC721._burn" -> "IERC721.ownerOf" [ color = "white" ];
  "ERC721._burn" -> "ERC721._beforeTokenTransfer" [ color = "#1bc6a6" ];
  "ERC721._burn" -> "ERC721._approve" [ color = "#1bc6a6" ];
  "ERC721._burn" -> "ERC721._afterTokenTransfer" [ color = "#1bc6a6" ];
  "ERC721._transfer" -> "IERC721.ownerOf" [ color = "white" ];
  "ERC721._transfer" -> "ERC721._beforeTokenTransfer" [ color = "#1bc6a6" ];
  "ERC721._transfer" -> "ERC721._approve" [ color = "#1bc6a6" ];
  "ERC721._transfer" -> "ERC721._afterTokenTransfer" [ color = "#1bc6a6" ];
  "ERC721._approve" -> "IERC721.ownerOf" [ color = "white" ];
  "ERC721._checkOnERC721Received" -> "to.isContract" [ color = "white" ];
  "ERC721._checkOnERC721Received" -> "ERC721._msgSender" [ color = "#1bc6a6" ];
  "Address.functionCall" -> "Address.functionCall" [ color = "#1bc6a6" ];
  "Address.functionCall" -> "Address.functionCallWithValue" [ color = "#1bc6a6" ];
  "Address.functionCallWithValue" -> "Address.functionCallWithValue" [ color = "#1bc6a6" ];
  "Address.functionCallWithValue" -> "Address.isContract" [ color = "#1bc6a6" ];
  "Address.functionCallWithValue" -> "Address.verifyCallResult" [ color = "#1bc6a6" ];
  "Address.functionStaticCall" -> "Address.functionStaticCall" [ color = "#1bc6a6" ];
  "Address.functionStaticCall" -> "Address.isContract" [ color = "#1bc6a6" ];
  "Address.functionStaticCall" -> "target.staticcall" [ color = "white" ];
  "Address.functionStaticCall" -> "Address.verifyCallResult" [ color = "#1bc6a6" ];
  "Address.functionDelegateCall" -> "Address.functionDelegateCall" [ color = "#1bc6a6" ];
  "Address.functionDelegateCall" -> "Address.isContract" [ color = "#1bc6a6" ];
  "Address.functionDelegateCall" -> "target.delegatecall" [ color = "white" ];
  "Address.functionDelegateCall" -> "Address.verifyCallResult" [ color = "#1bc6a6" ];
  "Strings.toHexString" -> "Strings.toHexString" [ color = "#1bc6a6" ];
  "ERC165.supportsInterface" -> "ERC165.type" [ color = "#1bc6a6" ];
  "ERC20.transfer" -> "ERC20._msgSender" [ color = "#1bc6a6" ];
  "ERC20.transfer" -> "ERC20._transfer" [ color = "#1bc6a6" ];
  "ERC20.approve" -> "ERC20._msgSender" [ color = "#1bc6a6" ];
  "ERC20.approve" -> "ERC20._approve" [ color = "#1bc6a6" ];
  "ERC20.transferFrom" -> "ERC20._msgSender" [ color = "#1bc6a6" ];
  "ERC20.transferFrom" -> "ERC20._spendAllowance" [ color = "#1bc6a6" ];
  "ERC20.transferFrom" -> "ERC20._transfer" [ color = "#1bc6a6" ];
  "ERC20.increaseAllowance" -> "ERC20._msgSender" [ color = "#1bc6a6" ];
  "ERC20.increaseAllowance" -> "ERC20._approve" [ color = "#1bc6a6" ];
  "ERC20.decreaseAllowance" -> "ERC20._msgSender" [ color = "#1bc6a6" ];
  "ERC20.decreaseAllowance" -> "ERC20._approve" [ color = "#1bc6a6" ];
  "ERC20._transfer" -> "ERC20._beforeTokenTransfer" [ color = "#1bc6a6" ];
  "ERC20._transfer" -> "ERC20._afterTokenTransfer" [ color = "#1bc6a6" ];
  "ERC20._mint" -> "ERC20._beforeTokenTransfer" [ color = "#1bc6a6" ];
  "ERC20._mint" -> "ERC20._afterTokenTransfer" [ color = "#1bc6a6" ];
  "ERC20._burn" -> "ERC20._beforeTokenTransfer" [ color = "#1bc6a6" ];
  "ERC20._burn" -> "ERC20._afterTokenTransfer" [ color = "#1bc6a6" ];
  "ERC20._spendAllowance" -> "ERC20.allowance" [ color = "#1bc6a6" ];
  "ERC20._spendAllowance" -> "ERC20.type" [ color = "#1bc6a6" ];
  "ERC20._spendAllowance" -> "ERC20._approve" [ color = "#1bc6a6" ];
  "Ownable.<Constructor>" -> "Ownable._transferOwnership" [ color = "#1bc6a6" ];
  "Ownable.<Constructor>" -> "Ownable._msgSender" [ color = "#1bc6a6" ];
  "Ownable.onlyOwner" -> "Ownable.owner" [ color = "#1bc6a6" ];
  "Ownable.onlyOwner" -> "Ownable._msgSender" [ color = "#1bc6a6" ];
  "Ownable.renounceOwnership" -> "Ownable._transferOwnership" [ color = "#1bc6a6" ];
  "Ownable.transferOwnership" -> "Ownable._transferOwnership" [ color = "#1bc6a6" ];
  "EnumerableSet._add" -> "EnumerableSet._contains" [ color = "#1bc6a6" ];
  "EnumerableSet.add" -> "EnumerableSet._add" [ color = "#1bc6a6" ];
  "EnumerableSet.remove" -> "EnumerableSet._remove" [ color = "#1bc6a6" ];
  "EnumerableSet.contains" -> "EnumerableSet._contains" [ color = "#1bc6a6" ];
  "EnumerableSet.length" -> "EnumerableSet._length" [ color = "#1bc6a6" ];
  "EnumerableSet.at" -> "EnumerableSet._at" [ color = "#1bc6a6" ];
  "EnumerableSet.values" -> "EnumerableSet._values" [ color = "#1bc6a6" ];
  "EnumerableSet.add" -> "EnumerableSet._add" [ color = "#1bc6a6" ];
  "EnumerableSet.remove" -> "EnumerableSet._remove" [ color = "#1bc6a6" ];
  "EnumerableSet.contains" -> "EnumerableSet._contains" [ color = "#1bc6a6" ];
  "EnumerableSet.length" -> "EnumerableSet._length" [ color = "#1bc6a6" ];
  "EnumerableSet.at" -> "EnumerableSet._at" [ color = "#1bc6a6" ];
  "EnumerableSet.values" -> "EnumerableSet._values" [ color = "#1bc6a6" ];
  "EnumerableSet.add" -> "EnumerableSet._add" [ color = "#1bc6a6" ];
  "EnumerableSet.remove" -> "EnumerableSet._remove" [ color = "#1bc6a6" ];
  "EnumerableSet.contains" -> "EnumerableSet._contains" [ color = "#1bc6a6" ];
  "EnumerableSet.length" -> "EnumerableSet._length" [ color = "#1bc6a6" ];
  "EnumerableSet.at" -> "EnumerableSet._at" [ color = "#1bc6a6" ];
  "EnumerableSet.values" -> "EnumerableSet._values" [ color = "#1bc6a6" ];


rankdir=LR
node [shape=plaintext]
subgraph cluster_01 { 
label = "Legend";
key [label=<<table border="0" cellpadding="2" cellspacing="0" cellborder="0">
  <tr><td align="right" port="i1">Internal Call</td></tr>
  <tr><td align="right" port="i2">External Call</td></tr>
  <tr><td align="right" port="i3">Defined Contract</td></tr>
  <tr><td align="right" port="i4">Undefined Contract</td></tr>
  </table>>]
key2 [label=<<table border="0" cellpadding="2" cellspacing="0" cellborder="0">
  <tr><td port="i1">&nbsp;&nbsp;&nbsp;</td></tr>
  <tr><td port="i2">&nbsp;&nbsp;&nbsp;</td></tr>
  <tr><td port="i3" bgcolor="#445773">&nbsp;&nbsp;&nbsp;</td></tr>
  <tr><td port="i4">
    <table border="1" cellborder="0" cellspacing="0" cellpadding="7" color="#e8726d">
      <tr>
       <td></td>
      </tr>
     </table>
  </td></tr>
  </table>>]
key:i1:e -> key2:i1:w [color="#1bc6a6"]
key:i2:e -> key2:i2:w [color="white"]
}
}
